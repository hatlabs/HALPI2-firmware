#!/bin/sh
# postinst script for halpi2-firmware.
#
# See: dh_installdeb(1).

set -e

# Summary of how this script can be called:
#        * <postinst> 'configure' <most-recently-configured-version>
#        * <old-postinst> 'abort-upgrade' <new version>
#        * <conflictor's-postinst> 'abort-remove' 'in-favour' <package>
#          <new-version>
#        * <postinst> 'abort-remove'
#        * <deconfigured's-postinst> 'abort-deconfigure' 'in-favour'
#          <failed-install-package> <version> 'removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package.

CONFIG_FILE="/etc/halpid/firmware.conf"
DEB_VERSION=$(zless /usr/share/doc/$DPKG_MAINTSCRIPT_PACKAGE/changelog* \
    | dpkg-parsechangelog -l- -S'Version')
FIRMWARE_PATH=$(dpkg -L $DPKG_MAINTSCRIPT_PACKAGE | grep -E '\.bin$$' | head -n 1)

# Default configuration
AUTO_FLASH_ON_INSTALL="yes"
FLASH_TIMEOUT="30"

# Source configuration if it exists
if [ -f "$CONFIG_FILE" ]; then
    . "$CONFIG_FILE"
fi

case "$1" in
    configure)
        if [ "$AUTO_FLASH_ON_INSTALL" != "yes" ]; then
            echo "Automatic firmware flashing disabled in $CONFIG_FILE"
            echo "Run 'sudo halpi flash $FIRMWARE_PATH' to flash manually."
            exit 0
        fi

        echo "Installing HALPI2 firmware..."

        # Check if halpi command is available
        if ! command -v halpi >/dev/null 2>&1; then
            echo "Warning: halpi command not found. Firmware not flashed."
            echo "Run 'sudo halpi flash $FIRMWARE_PATH' manually after halpid installation."
            exit 0
        fi

        # Check if hardware is accessible
        if ! halpi firmware-version >/dev/null 2>&1; then
            echo "Warning: HALPI2 hardware not accessible. Firmware not flashed."
            echo "Run 'sudo halpi flash $FIRMWARE_PATH' manually when hardware is connected."
            exit 0
        fi

        # Flash the firmware with timeout
        echo "Flashing firmware (this may take up to $FLASH_TIMEOUT seconds)..."
        if timeout "$FLASH_TIMEOUT" halpi flash "$FIRMWARE_PATH"; then
            echo "Firmware flashed successfully. You need to shutdown the device to apply changes."
            echo "Run 'sudo shutdown -h now' to power off the device (restart is not sufficient)."
        else
            echo "ERROR: Firmware flashing failed!"
            echo "You may need to flash manually: sudo halpi flash $FIRMWARE_PATH"
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument '$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
